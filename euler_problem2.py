# Hackbright - Day 1 - 9/23/13
# Ava St. John and Ingrid Avendano
#
#
# Euler Problem 2:
#
# Each new term in the Fibonacci sequence is generated by adding 
# the previous two terms. By starting with 1 and 2, the first 10 
# terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values 
# do not exceed four million, find the sum of the even-valued terms.


fib_current = 2
fib_previous = 1
fib_sum = 0

while fib_current <= 4000000:
    # only sums even valued numbers
    # print fib_current
    if fib_current % 2 == 0:
        fib_sum += fib_current

    fib_current += fib_previous
    fib_previous = fib_current - fib_previous 

    # print "sum so far: %d" % fib_sum

print fib_sum